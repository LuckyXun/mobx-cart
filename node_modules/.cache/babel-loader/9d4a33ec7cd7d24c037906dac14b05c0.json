{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const TODO_KEY = \"todo\"; // 异步函数方式一\n// export const loadTodos = createAsyncThunk(`${TODO_KEY}/loadTodos`,\n//   async (api,thunkAPI)=>{\n//     const {data}  = await axios.get(api);\n//     thunkAPI.dispatch(setTodos(data))\n//   }\n// )\n// 异步函数方式二\n\nexport const loadTodos = createAsyncThunk(`${TODO_KEY}/loadTodos`, api => axios.get(api).then(res => res.data));\nexport const todoSlice = createSlice({\n  name: TODO_KEY,\n  initialState: {\n    todos: []\n  },\n  reducers: {\n    addTodo: {\n      prepare(state) {\n        return {\n          payload: { ...state,\n            ...{\n              cid: Math.random()\n            }\n          }\n        };\n      },\n\n      reducer(state, action) {\n        state.todos.push(action.payload);\n      }\n\n    },\n\n    setTodos(state, action) {\n      console.log('setTodos');\n      state.todos.push(...action.payload);\n    }\n\n  },\n  extraReducers: {\n    [loadTodos.pending]: (state, action) => {\n      return state;\n    },\n    [loadTodos.fulfilled]: (state, action) => {\n      console.log('fulfilled');\n      console.log(action.payloadß);\n      setTodos(action.payload);\n      console.log('2333ß');\n    }\n  }\n}); // export function  selectTodos(state,action){\n//   return state.todo.todos\n// }\n\nexport const {\n  setTodos,\n  addTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/xun/Desktop/private/redux-tutorial/src/Store/todos.slice.js"],"names":["createSlice","createAsyncThunk","axios","TODO_KEY","loadTodos","api","get","then","res","data","todoSlice","name","initialState","todos","reducers","addTodo","prepare","state","payload","cid","Math","random","reducer","action","push","setTodos","console","log","extraReducers","pending","fulfilled","payloadß","actions"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,QAAQ,GAAG,MAAjB,C,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAE,GAAEE,QAAS,YAAb,EAAyBE,GAAG,IAAIH,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAEA,GAAG,CAACC,IAA7B,CAAhC,CAAlC;AACP,OAAO,MAAMC,SAAS,GAAGV,WAAW,CAAC;AACnCW,EAAAA,IAAI,EAACR,QAD8B;AAEnCS,EAAAA,YAAY,EAAC;AACXC,IAAAA,KAAK,EAAC;AADK,GAFsB;AAKnCC,EAAAA,QAAQ,EAAC;AACPC,IAAAA,OAAO,EAAC;AACNC,MAAAA,OAAO,CAACC,KAAD,EAAO;AACZ,eAAO;AAACC,UAAAA,OAAO,EAAE,EAAC,GAAGD,KAAJ;AAAU,eAAG;AAACE,cAAAA,GAAG,EAACC,IAAI,CAACC,MAAL;AAAL;AAAb;AAAV,SAAP;AACD,OAHK;;AAINC,MAAAA,OAAO,CAACL,KAAD,EAAOM,MAAP,EAAc;AACnBN,QAAAA,KAAK,CAACJ,KAAN,CAAYW,IAAZ,CAAiBD,MAAM,CAACL,OAAxB;AACD;;AANK,KADD;;AASPO,IAAAA,QAAQ,CAACR,KAAD,EAAOM,MAAP,EAAc;AACpBG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAV,MAAAA,KAAK,CAACJ,KAAN,CAAYW,IAAZ,CAAiB,GAAGD,MAAM,CAACL,OAA3B;AACD;;AAZM,GAL0B;AAmBnCU,EAAAA,aAAa,EAAC;AACZ,KAACxB,SAAS,CAACyB,OAAX,GAAoB,CAACZ,KAAD,EAAOM,MAAP,KAAgB;AAClC,aAAON,KAAP;AACD,KAHW;AAIZ,KAACb,SAAS,CAAC0B,SAAX,GAAsB,CAACb,KAAD,EAAOM,MAAP,KAAgB;AACpCG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACQ,QAAnB;AACAN,MAAAA,QAAQ,CAACF,MAAM,CAACL,OAAR,CAAR;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AATW;AAnBqB,CAAD,CAA7B,C,CA+BP;AACA;AACA;;AAEA,OAAO,MAAM;AAAEF,EAAAA,QAAF;AAAYV,EAAAA;AAAZ,IAAuBL,SAAS,CAACsB,OAAvC;AACP,eAAetB,SAAS,CAACY,OAAzB","sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n\n\n\nexport const TODO_KEY = \"todo\";\n// 异步函数方式一\n// export const loadTodos = createAsyncThunk(`${TODO_KEY}/loadTodos`,\n//   async (api,thunkAPI)=>{\n//     const {data}  = await axios.get(api);\n//     thunkAPI.dispatch(setTodos(data))\n//   }\n// )\n// 异步函数方式二\nexport const loadTodos = createAsyncThunk(`${TODO_KEY}/loadTodos`,api => axios.get(api).then(res=>res.data));\nexport const todoSlice = createSlice({\n  name:TODO_KEY,\n  initialState:{\n    todos:[]\n  },\n  reducers:{\n    addTodo:{\n      prepare(state){\n        return {payload: {...state,...{cid:Math.random()}}}\n      },\n      reducer(state,action){\n        state.todos.push(action.payload)\n      }\n    },\n    setTodos(state,action){ \n      console.log('setTodos')\n      state.todos.push(...action.payload)\n    }\n  },\n  extraReducers:{\n    [loadTodos.pending]:(state,action)=>{\n      return state\n    },\n    [loadTodos.fulfilled]:(state,action)=>{\n      console.log('fulfilled')\n      console.log(action.payloadß)\n      setTodos(action.payload)\n      console.log('2333ß')\n    }\n  }\n})\n// export function  selectTodos(state,action){\n//   return state.todo.todos\n// }\n\nexport const { setTodos, addTodo} = todoSlice.actions;\nexport default todoSlice.reducer"]},"metadata":{},"sourceType":"module"}