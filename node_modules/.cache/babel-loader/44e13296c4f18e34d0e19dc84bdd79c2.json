{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const TODO_KEY = \"todo\";\nexport const loadTodos = createAsyncThunk(`${TODO_KEY}/loadTodos`, async (api, thunkAPI) => {\n  const {\n    data\n  } = await axios.get(api);\n  thunkAPI.dispatch(setTodos(data));\n});\nexport const todoSlice = createSlice({\n  name: TODO_KEY,\n  initialState: {\n    todos: []\n  },\n  reducers: {\n    //  loadTodos(state,action){\n    //   console.log(state.todos);\n    //   // console.log(action)\n    //    axios.get(action.payload).then(res=>{\n    //      state.todos = res.data\n    //      console.log(res)\n    //    });\n    // },\n    addTodo: {\n      prepare(state) {\n        return {\n          payload: { ...state,\n            ...{\n              cid: Math.random()\n            }\n          }\n        };\n      },\n\n      reducer(state, action) {\n        state.todos.push(action.payload);\n      }\n\n    },\n\n    setTodos(state, action) {\n      console.log(state.todo);\n      console.log(action);\n    }\n\n  }\n}); // export function  selectTodos(state,action){\n//   return state.todo.todos\n// }\n\nconsole.log(todoSlice);\nexport const {\n  setTodos,\n  addTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/xun/Desktop/private/redux-tutorial/src/Store/todos.slice.js"],"names":["createSlice","createAsyncThunk","axios","TODO_KEY","loadTodos","api","thunkAPI","data","get","dispatch","setTodos","todoSlice","name","initialState","todos","reducers","addTodo","prepare","state","payload","cid","Math","random","reducer","action","push","console","log","todo","actions"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,QAAQ,GAAG,MAAjB;AACP,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAE,GAAEE,QAAS,YAAb,EACvC,OAAOE,GAAP,EAAWC,QAAX,KAAsB;AACpB,QAAM;AAACC,IAAAA;AAAD,MAAU,MAAML,KAAK,CAACM,GAAN,CAAUH,GAAV,CAAtB;AACAC,EAAAA,QAAQ,CAACG,QAAT,CAAkBC,QAAQ,CAACH,IAAD,CAA1B;AAED,CALsC,CAAlC;AAYP,OAAO,MAAMI,SAAS,GAAGX,WAAW,CAAC;AACnCY,EAAAA,IAAI,EAACT,QAD8B;AAEnCU,EAAAA,YAAY,EAAC;AACXC,IAAAA,KAAK,EAAC;AADK,GAFsB;AAKnCC,EAAAA,QAAQ,EAAC;AACP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,EAAC;AACNC,MAAAA,OAAO,CAACC,KAAD,EAAO;AACZ,eAAO;AAACC,UAAAA,OAAO,EAAE,EAAC,GAAGD,KAAJ;AAAU,eAAG;AAACE,cAAAA,GAAG,EAACC,IAAI,CAACC,MAAL;AAAL;AAAb;AAAV,SAAP;AACD,OAHK;;AAINC,MAAAA,OAAO,CAACL,KAAD,EAAOM,MAAP,EAAc;AACnBN,QAAAA,KAAK,CAACJ,KAAN,CAAYW,IAAZ,CAAiBD,MAAM,CAACL,OAAxB;AACD;;AANK,KAVD;;AAkBPT,IAAAA,QAAQ,CAACQ,KAAD,EAAOM,MAAP,EAAc;AACpBE,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,IAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAED;;AAtBM;AAL0B,CAAD,CAA7B,C,CAgCP;AACA;AACA;;AACAE,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACA,OAAO,MAAM;AAAED,EAAAA,QAAF;AAAYM,EAAAA;AAAZ,IAAuBL,SAAS,CAACkB,OAAvC;AACP,eAAelB,SAAS,CAACY,OAAzB","sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n\n\n\nexport const TODO_KEY = \"todo\";\nexport const loadTodos = createAsyncThunk(`${TODO_KEY}/loadTodos`,\n  async (api,thunkAPI)=>{\n    const {data}  = await axios.get(api);\n    thunkAPI.dispatch(setTodos(data))\n\n  }\n\n)\n\n\n\n\nexport const todoSlice = createSlice({\n  name:TODO_KEY,\n  initialState:{\n    todos:[]\n  },\n  reducers:{\n    //  loadTodos(state,action){\n    //   console.log(state.todos);\n    //   // console.log(action)\n    //    axios.get(action.payload).then(res=>{\n     \n    //      state.todos = res.data\n    //      console.log(res)\n    //    });\n    // },\n    addTodo:{\n      prepare(state){\n        return {payload: {...state,...{cid:Math.random()}}}\n      },\n      reducer(state,action){\n        state.todos.push(action.payload)\n      }\n    },\n    setTodos(state,action){\n      console.log(state.todo)\n      console.log(action)\n      \n    }\n\n   \n  }\n})\n// export function  selectTodos(state,action){\n//   return state.todo.todos\n// }\nconsole.log(todoSlice);\nexport const { setTodos, addTodo} = todoSlice.actions;\nexport default todoSlice.reducer"]},"metadata":{},"sourceType":"module"}